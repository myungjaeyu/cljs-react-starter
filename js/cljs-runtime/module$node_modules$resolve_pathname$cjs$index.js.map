{
"version":3,
"file":"module$node_modules$resolve_pathname$cjs$index.js",
"lineCount":3,
"mappings":"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",
"sources":["node_modules/resolve-pathname/cjs/index.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$resolve_pathname$cjs$index\"] = function(global,require,module,exports) {\n'use strict';\n\nexports.__esModule = true;\nfunction isAbsolute(pathname) {\n  return pathname.charAt(0) === '/';\n}\n\n// About 1.5x faster than the two-arg version of Array#splice()\nfunction spliceOne(list, index) {\n  for (var i = index, k = i + 1, n = list.length; k < n; i += 1, k += 1) {\n    list[i] = list[k];\n  }\n\n  list.pop();\n}\n\n// This implementation is based heavily on node's url.parse\nfunction resolvePathname(to) {\n  var from = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n\n  var toParts = to && to.split('/') || [];\n  var fromParts = from && from.split('/') || [];\n\n  var isToAbs = to && isAbsolute(to);\n  var isFromAbs = from && isAbsolute(from);\n  var mustEndAbs = isToAbs || isFromAbs;\n\n  if (to && isAbsolute(to)) {\n    // to is absolute\n    fromParts = toParts;\n  } else if (toParts.length) {\n    // to is relative, drop the filename\n    fromParts.pop();\n    fromParts = fromParts.concat(toParts);\n  }\n\n  if (!fromParts.length) return '/';\n\n  var hasTrailingSlash = void 0;\n  if (fromParts.length) {\n    var last = fromParts[fromParts.length - 1];\n    hasTrailingSlash = last === '.' || last === '..' || last === '';\n  } else {\n    hasTrailingSlash = false;\n  }\n\n  var up = 0;\n  for (var i = fromParts.length; i >= 0; i--) {\n    var part = fromParts[i];\n\n    if (part === '.') {\n      spliceOne(fromParts, i);\n    } else if (part === '..') {\n      spliceOne(fromParts, i);\n      up++;\n    } else if (up) {\n      spliceOne(fromParts, i);\n      up--;\n    }\n  }\n\n  if (!mustEndAbs) for (; up--; up) {\n    fromParts.unshift('..');\n  }if (mustEndAbs && fromParts[0] !== '' && (!fromParts[0] || !isAbsolute(fromParts[0]))) fromParts.unshift('');\n\n  var result = fromParts.join('/');\n\n  if (hasTrailingSlash && result.substr(-1) !== '/') result += '/';\n\n  return result;\n}\n\nexports.default = resolvePathname;\nmodule.exports = exports['default'];\n};"],
"names":["shadow$provide","global","require","module","exports","spliceOne","list","index","k","i","n","length","pop","__esModule","default","resolvePathname","to","from","arguments","undefined","toParts","split","fromParts","isToAbs","charAt","isFromAbs","mustEndAbs","concat","last","hasTrailingSlash","up","part","unshift","pathname","result","join","substr"]
}
