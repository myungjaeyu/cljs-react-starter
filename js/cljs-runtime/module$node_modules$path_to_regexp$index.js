shadow$provide.module$node_modules$path_to_regexp$index=function(global,require,module,exports){function parse(str,options){var tokens=[],key=0,index=0,path="";options=options&&options.delimiter||"/";for(var res;null!=(res=PATH_REGEXP.exec(str));){var m=res[0],escaped=res[1],offset=res.index;path+=str.slice(index,offset);index=offset+m.length;if(escaped)path+=escaped[1];else{var next=str[index];m=res[2];escaped=res[3];var capture=res[4],group=res[5],modifier=res[6];offset=res[7];path&&(tokens.push(path),
path="");next=null!=m&&null!=next&&next!==m;var repeat="+"===modifier||"*"===modifier;modifier="?"===modifier||"*"===modifier;res=res[2]||options;capture=capture||group;tokens.push({name:escaped||key++,prefix:m||"",delimiter:res,optional:modifier,repeat:repeat,partial:next,asterisk:!!offset,pattern:capture?capture.replace(/([=!:$\/()])/g,"\\$1"):offset?".*":"[^"+escapeString(res)+"]+?"})}}index<str.length&&(path+=str.substr(index));path&&tokens.push(path);return tokens}function encodeURIComponentPretty(str){return encodeURI(str).replace(/[\/?#]/g,
function(c){return"%"+c.charCodeAt(0).toString(16).toUpperCase()})}function encodeAsterisk(str){return encodeURI(str).replace(/[?#]/g,function(c){return"%"+c.charCodeAt(0).toString(16).toUpperCase()})}function tokensToFunction(tokens){for(var matches=Array(tokens.length),i$jscomp$0=0;i$jscomp$0<tokens.length;i$jscomp$0++)"object"===typeof tokens[i$jscomp$0]&&(matches[i$jscomp$0]=new RegExp("^(?:"+tokens[i$jscomp$0].pattern+")$"));return function(obj,opts){var path="";obj=obj||{};opts=(opts||{}).pretty?
encodeURIComponentPretty:encodeURIComponent;for(var i=0;i<tokens.length;i++){var token=tokens[i];if("string"===typeof token)path+=token;else{var value=obj[token.name];if(null==value)if(token.optional){token.partial&&(path+=token.prefix);continue}else throw new TypeError('Expected "'+token.name+'" to be defined');if(isarray(value)){if(!token.repeat)throw new TypeError('Expected "'+token.name+'" to not repeat, but received `'+JSON.stringify(value)+"`");if(0===value.length)if(token.optional)continue;
else throw new TypeError('Expected "'+token.name+'" to not be empty');for(var j=0;j<value.length;j++){var segment=opts(value[j]);if(!matches[i].test(segment))throw new TypeError('Expected all "'+token.name+'" to match "'+token.pattern+'", but received `'+JSON.stringify(segment)+"`");path+=(0===j?token.prefix:token.delimiter)+segment}}else{segment=token.asterisk?encodeAsterisk(value):opts(value);if(!matches[i].test(segment))throw new TypeError('Expected "'+token.name+'" to match "'+token.pattern+'", but received "'+
segment+'"');path+=token.prefix+segment}}}return path}}function escapeString(str){return str.replace(/([.+*?=^!:${}()[\]|\/\\])/g,"\\$1")}function attachKeys(re,keys){re.keys=keys;return re}function tokensToRegExp(tokens,keys,options){isarray(keys)||(options=keys||options,keys=[]);options=options||{};for(var strict=options.strict,end=!1!==options.end,route="",i=0;i<tokens.length;i++){var token=tokens[i];if("string"===typeof token)route+=escapeString(token);else{var prefix=escapeString(token.prefix),
capture="(?:"+token.pattern+")";keys.push(token);token.repeat&&(capture+="(?:"+prefix+capture+")*");capture=token.optional?token.partial?prefix+"("+capture+")?":"(?:"+prefix+"("+capture+"))?":prefix+"("+capture+")";route+=capture}}tokens=escapeString(options.delimiter||"/");i=route.slice(-tokens.length)===tokens;strict||(route=(i?route.slice(0,-tokens.length):route)+"(?:"+tokens+"(?\x3d$))?");return attachKeys(new RegExp("^"+(end?route+"$":route+(strict&&i?"":"(?\x3d"+tokens+"|$)")),options.sensitive?
"":"i"),keys)}function pathToRegexp(path,keys,options){isarray(keys)||(options=keys||options,keys=[]);options=options||{};if(path instanceof RegExp){if(options=path.source.match(/\((?!\?)/g))for(var i=0;i<options.length;i++)keys.push({name:i,prefix:null,delimiter:null,optional:!1,repeat:!1,partial:!1,asterisk:!1,pattern:null});return attachKeys(path,keys)}if(isarray(path)){i=[];for(var i$jscomp$0=0;i$jscomp$0<path.length;i$jscomp$0++)i.push(pathToRegexp(path[i$jscomp$0],keys,options).source);path=
new RegExp("(?:"+i.join("|")+")",options.sensitive?"":"i");return attachKeys(path,keys)}return tokensToRegExp(parse(path,options),keys,options)}var isarray=require("module$node_modules$isarray$index");module.exports=pathToRegexp;module.exports.parse=parse;module.exports.compile=function(str,options){return tokensToFunction(parse(str,options))};module.exports.tokensToFunction=tokensToFunction;module.exports.tokensToRegExp=tokensToRegExp;var PATH_REGEXP=/(\\.)|([\/.])?(?:(?:\:(\w+)(?:\(((?:\\.|[^\\()])+)\))?|\(((?:\\.|[^\\()])+)\))([+*?])?|(\*))/g}
//# sourceMappingURL=module$node_modules$path_to_regexp$index.js.map
